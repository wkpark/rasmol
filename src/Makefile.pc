CC   = CL /nologo /AM /J /W3
LD   = LINK /NOD /NOE

DEBUG = 0

!if $(DEBUG)
CFLAGS = /Zi /Od
LFLAGS = /CO /LI /MAP
!else
.SILENT:

CFLAGS = /G2Asr /Ogiloab2
LFLAGS =
!endif

# 80x87 Present:  /FPi87  MLIBC7W
# 80x87 Detect:   /FPi    MLIBCEW
# 80x87 Absent:   /FPa    MLIBCAW
 
LIBS   = LIBW MLIBCEW COMMDLG SHELL

OBJS   = raswin.obj molecule.obj command.obj abstree.obj transfor.obj \
         render.obj pixutils.obj mswin31.obj outfile.obj script.obj


goal:		raswin.exe

raswin.exe:	$(OBJS) raswin.def raswin.res
		$(LD) $(LFLAGS) @<<
			$(OBJS),
			raswin.exe,
			raswin.map,
			$(LIBS),
			raswin.def
<< 
		$(RC) /TK raswin.res
!if $(DEBUG)
		MAPSYM raswin.map
!endif


raswin.obj:	raswin.c rasmol.h raswin.idm molecule.h command.h \
		abstree.h transfor.h render.h pixutils.h graphics.h \
		outfile.h
		$(CC) /c $(CFLAGS) raswin.c

molecule.obj:	molecule.c molecule.h rasmol.h abstree.h command.h \
		transfor.h render.h
		$(CC) /c $(CFLAGS) molecule.c

transfor.obj:	transfor.c transfor.h rasmol.h molecule.h command.h \
		abstree.h render.h graphics.h
		$(CC) /c $(CFLAGS) transfor.c

command.obj:    command.c command.h rasmol.h tokens.h abstree.h \
		molecule.h transfor.h render.h graphics.h pixutils.h \
		outfile.h
		$(CC) /c $(CFLAGS) command.c

abstree.obj:	abstree.c abstree.h rasmol.h molecule.h
		$(CC) /c $(CFLAGS) abstree.c

render.obj:     render.c render.h rasmol.h molecule.h transfor.h \
		command.h graphics.h pixutils.h
		$(CC) /c $(CFLAGS) render.c

mswin31.obj:	mswin31.c graphics.h rasmol.h render.h
		$(CC) /c $(CFLAGS) mswin31.c

pixutils.obj:   pixutils.c pixutils.h rasmol.h render.h graphics.h font.h
		$(CC) /c $(CFLAGS) pixutils.c

outfile.obj:	outfile.c outfile.h rasmol.h command.h abstree.h \
		transfor.h render.h graphics.h pixutils.h script.h
		$(CC) /c $(CFLAGS) outfile.c

script.obj:	script.c script.h rasmol.h command.h abstree.h \
		transfor.h render.h graphics.h pixutils.h
		$(CC) /c $(CFLAGS) script.c

raswin.res:	raswin.rc raswin.idm
		$(RC) /r raswin.rc
